{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Web Dev 2022\\\\portfo\\\\src\\\\components\\\\Form\\\\Form.tsx\";\nimport React from 'react';\nimport { Container, ContainerSucces } from './styles';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useEffect, useState } from 'react';\nimport validator from 'validator';\nexport function Form() {\n  const [state, handleSubmit] = useForm('myyozglw');\n  const [validEmail, setValidEmail] = useState(false);\n  const [isHuman, setIsHuman] = useState(false);\n  const [message, setMessage] = useState('');\n\n  function verifyEmail(email) {\n    if (validator.isEmail(email)) {\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  }\n\n  useEffect(() => {\n    if (state.succeeded) {\n      toast.success('Email successfully sent!', {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnFocusLoss: false,\n        closeOnClick: true,\n        hideProgressBar: false,\n        toastId: 'succeeded'\n      });\n    }\n  });\n\n  if (state.succeeded) {\n    return /*#__PURE__*/React.createElement(ContainerSucces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Thank you for contacting us!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Back to the top\"), /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Get in touch using the form below\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Email\",\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    onChange: e => {\n      verifyEmail(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ValidationError, {\n    prefix: \"Email\",\n    field: \"email\",\n    errors: state.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    required: true,\n    placeholder: \"Leave your message\",\n    id: \"message\",\n    name: \"message\",\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ValidationError, {\n    prefix: \"Message\",\n    field: \"message\",\n    errors: state.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    sitekey: \"6LcAu-IdAAAAAJOTI5E_eRltZNQCvukIl2-f1glQ\",\n    onChange: e => {\n      setIsHuman(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: state.submitting || !validEmail || !message || !isHuman,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Web Dev 2022/portfo/src/components/Form/Form.tsx"],"names":["React","Container","ContainerSucces","useForm","ValidationError","toast","ToastContainer","ReCAPTCHA","useEffect","useState","validator","Form","state","handleSubmit","validEmail","setValidEmail","isHuman","setIsHuman","message","setMessage","verifyEmail","email","isEmail","succeeded","success","position","POSITION","BOTTOM_LEFT","pauseOnFocusLoss","closeOnClick","hideProgressBar","toastId","window","scrollTo","top","behavior","e","target","value","errors","submitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Container, ContainerSucces } from './styles'\r\nimport { useForm, ValidationError } from '@formspree/react'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\nimport { useEffect, useState } from 'react'\r\nimport validator from 'validator'\r\n\r\nexport function Form() {\r\n  const [state, handleSubmit] = useForm('myyozglw')\r\n\r\n  const [validEmail, setValidEmail] = useState(false)\r\n  const [isHuman, setIsHuman] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  function verifyEmail(email: string) {\r\n    if (validator.isEmail(email)) {\r\n      setValidEmail(true)\r\n    } else {\r\n      setValidEmail(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.succeeded) {\r\n      toast.success('Email successfully sent!', {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n        pauseOnFocusLoss: false,\r\n        closeOnClick: true,\r\n        hideProgressBar: false,\r\n        toastId: 'succeeded',\r\n      })\r\n    }\r\n  })\r\n  if (state.succeeded) {\r\n    return (\r\n      <ContainerSucces>\r\n        <h3>Thank you for contacting us!</h3>\r\n        <button\r\n          onClick={() => {\r\n            window.scrollTo({ top: 0, behavior: 'smooth' })\r\n          }}\r\n        >\r\n          Back to the top\r\n        </button>\r\n        <ToastContainer />\r\n      </ContainerSucces>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Get in touch using the form below</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={(e) => {\r\n            verifyEmail(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\r\n        <textarea\r\n          required\r\n          placeholder=\"Leave your message\"\r\n          id=\"message\"\r\n          name=\"message\"\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n        />\r\n        <ValidationError\r\n          prefix=\"Message\"\r\n          field=\"message\"\r\n          errors={state.errors}\r\n        />\r\n        <ReCAPTCHA\r\n          sitekey=\"6LcAu-IdAAAAAJOTI5E_eRltZNQCvukIl2-f1glQ\"\r\n          onChange={(e) => {\r\n            setIsHuman(true)\r\n          }}\r\n        ></ReCAPTCHA>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={state.submitting || !validEmail || !message || !isHuman}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}