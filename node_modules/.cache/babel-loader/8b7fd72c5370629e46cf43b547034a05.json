{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitter = void 0;\n\nconst AnimatableColor_1 = require(\"../../../../Options/Classes/AnimatableColor\");\n\nconst EmitterLife_1 = require(\"./EmitterLife\");\n\nconst EmitterRate_1 = require(\"./EmitterRate\");\n\nconst EmitterSize_1 = require(\"./EmitterSize\");\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nclass Emitter {\n  constructor() {\n    this.autoPlay = true;\n    this.fill = true;\n    this.life = new EmitterLife_1.EmitterLife();\n    this.rate = new EmitterRate_1.EmitterRate();\n    this.shape = \"square\";\n    this.startCount = 0;\n  }\n\n  load(data) {\n    if (data === undefined) {\n      return;\n    }\n\n    if (data.autoPlay !== undefined) {\n      this.autoPlay = data.autoPlay;\n    }\n\n    if (data.size !== undefined) {\n      if (this.size === undefined) {\n        this.size = new EmitterSize_1.EmitterSize();\n      }\n\n      this.size.load(data.size);\n    }\n\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n\n    this.domId = data.domId;\n\n    if (data.fill !== undefined) {\n      this.fill = data.fill;\n    }\n\n    this.life.load(data.life);\n    this.name = data.name;\n\n    if (data.particles !== undefined) {\n      this.particles = (0, Utils_1.deepExtend)({}, data.particles);\n    }\n\n    this.rate.load(data.rate);\n\n    if (data.shape !== undefined) {\n      this.shape = data.shape;\n    }\n\n    if (data.position !== undefined) {\n      this.position = {\n        x: data.position.x,\n        y: data.position.y\n      };\n    }\n\n    if (data.spawnColor !== undefined) {\n      if (this.spawnColor === undefined) {\n        this.spawnColor = new AnimatableColor_1.AnimatableColor();\n      }\n\n      this.spawnColor.load(data.spawnColor);\n    }\n\n    if (data.startCount !== undefined) {\n      this.startCount = data.startCount;\n    }\n  }\n\n}\n\nexports.Emitter = Emitter;","map":null,"metadata":{},"sourceType":"script"}